<application>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1677656753984" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="KOREAN" />
    <option name="showExplanation" value="true" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
  <component name="Translation.States">
    <option name="newTranslationDialogHeight" value="479" />
    <option name="newTranslationDialogWidth" value="560" />
    <option name="newTranslationDialogX" value="1469" />
    <option name="newTranslationDialogY" value="656" />
    <histories>
      <item value="Unsupported Java. &#10;Your build is currently configured to use Java 19.0.2 and Gradle 7.5.&#10;&#10;Possible solution:&#10; - Open Gradle wrapper settings, change `distributionUrl` property to use compatible Gradle version and reload the project" />
      <item value="Unsupported Java. &#10;Your build is currently configured to use Java 19.0.2 and Gradle 7.5.&#10;&#10;Possible solution:&#10; - Open Gradle wrapper settings, change `distributionUrl` property to use compatible Gradle version and reload the project&#10;" />
      <item value="&lt;LinearLayout&gt;: Unnecessary leaf layout" />
      <item value="This item may not have a label readable by screen readers." />
      <item value="Set VSCode Theme as default theme. If you find this plugin useful consider sponsoring its development to ensure that the project is actively maintained and improved." />
      <item value="problem occurred evaluating root project 'Fire_baseChat'.&#10;&gt; Build was configured to prefer settings repositories over project repositories but repository 'Google' was added by build file 'build.gradle'" />
      <item value="Multiple Gradle daemons might be spawned because the Gradle JDK and JAVA_HOME locations are different. Project 'PostingApp' is using the following JDK location when running Gradle: 'C:/Program Files/Android/Android Studio/jbr' The system environment variable JAVA_HOME is: 'C:\Program Files\Java\jdk-19' If you dont need to use different paths (or if JAVA_HOME is undefined), youcan avoid spawning multiple daemons by setting JAVA_HOME and the JDK locationto the same path." />
      <item value="Could not get unknown property 'kotlin_version'" />
      <item value="Duplicate class kotlin.collections.jdk8.CollectionsJDK8Kt found in modules kotlin-stdlib-1.8.0 (org.jetbrains.kotlin:kotlin-stdlib:1.8.0) and kotlin-stdlib-jdk8-1.6.0 (org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0)" />
      <item value="java.lang.RuntimeException: Unable to start activity ComponentInfo{com.example.fire_basechat/com.example.fire_basechat.ChatActivity}: java.lang.NullPointerException: println needs a message" />
      <item value="Migrations for Kotlin code are available  Detected migration:   Standard library: 1.7.10 -&gt; 1.8.0   Language version: 1.7 -&gt; 1.8   API version: 1.7 -&gt; 1.8" />
      <item value="A problem occurred evaluating root project 'PostingApp'.&#10;&gt; Build was configured to prefer settings repositories over project repositories but repository 'Google' was added by build file 'build.gradle'" />
      <item value="ly buildscript {}, pluginManagement {} and other plugins {} script blocks are allowed before plugins {} blocks, no other statements are allowed" />
      <item value="Build file 'C:\Users\5-10\Documents\Github\PostingApp\build.gradle' line: 24&#10;&#10;Could not compile build file 'C:\Users\5-10\Documents\Github\PostingApp\build.gradle'.&#10;&gt; startup failed:&#10;  build file 'C:\Users\5-10\Documents\Github\PostingApp\build.gradle': 24: only buildscript {}, pluginManagement {} and other plugins {} script blocks are allowed before plugins {} blocks, no other statements are allowed&#10;" />
      <item value="Caused by: groovy.lang.MissingPropertyException: Could not get unknown property 'kotlin_version' for object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler.&#10;&#9;at org.gradle.internal.metaobject.AbstractDynamicObject.getMissingProperty(AbstractDynamicObject.java:88)&#10;&#9;at org.gradle.internal.metaobject.ConfigureDelegate.getProperty(ConfigureDelegate.java:130)" />
      <item value="or object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler." />
      <item value="&#10;Learn how to structure data for Realtime Database.&#10;Scale your data across multiple database instances.&#10;Read and write data.&#10;View your database in the Firebase console." />
      <item value="# Add this global rule&#10;-keepattributes Signature&#10;&#10;# This rule will properly ProGuard all the model classes in&#10;# the package com.yourcompany.models.&#10;# Modify this rule to fit the structure of your app.&#10;-keepclassmembers class com.yourcompany.models.** {&#10;  *;&#10;}" />
      <item value="&#10;When using Firebase Realtime Database in your app along with ProGuard, you need to consider how your model objects will be serialized and deserialized after obfuscation. If you use DataSnapshot.getValue(Class) or DatabaseReference.setValue(Object) to read and write data you will need to add rules to the proguard-rules.pro file:" />
      <item value="/ This method is called once with the initial value and again&#10;        // whenever data at this location is updated." />
      <item value="&#10;To make your app data update in realtime, you should add a ValueEventListener to the reference you just created.&#10; &#10;The onDataChange() method in this class is triggered once when the listener is attached and again every time the data changes, including the children." />
      <item value="&#10;You can save a range of data types to the database this way, including Java objects. When you save an object the responses from any getters will be saved as children of this location." />
      <item value="&#10;Retrieve an instance of your database using getInstance() and reference the location you want to write to.&#10; &#10;To get a reference to a database other than a us-central1 default database, you must pass the database URL to getInstance(). For a us-central1 default database, you can call getInstance() without arguments. Learn more about database locations." />
      <item value="&#10;The Realtime Database provides a declarative rules language that allows you to define how your data should be structured, how it should be indexed, and when your data can be read from and written to.&#10; &#10;By default, read and write access to your database is restricted so only authenticated users can read or write data. To get started without setting up Authentication, you can configure your rules for public access. This does make your database open to anyone, even people not using your app, so be sure to restrict your database again when you set up authentication." />
      <item value="To use the Realtime Database, you need to create a database instance in the Firebase console." />
      <item value="NOTE: After adding the SDK, here are some other helpful configurations to consider:&#10; &#10;Do you want an easier way to manage library versions? You can use the Firebase Android BoM to manage your Firebase library versions and ensure that your app is always using compatible library versions." />
      <item value="Cannot clean project while build is in progress. Please wait until the build finishes to clean the project." />
      <item value="java.lang.IndexOutOfBoundsException: Inconsistency detected. Invalid view holder adapter positionMessageViewHolder{5ab2385 position=5 id=-1, oldPos=4, pLpos:4 scrap [attachedScrap] tmpDetached no parent} androidx.recyclerview.widget.RecyclerView{87d1af VFED..... ......I. 0,0-1080,1480 #7f08011c app:id/messageRecyclerView}, adapter:com.google.firebase.codelab.friendlychat.FriendlyMessageAdapter@811c9bc, layout:androidx.recyclerview.widget.LinearLayoutManager@e725d45, context:com.google.firebase.codelab.friendlychat.MainActivity@97824a1&#10;        at androidx.recyclerview.widget.RecyclerView$Recycler.validateViewHolderForOffsetPosition" />
      <item value="Before we get started, keep in mind:&#10;&#10;  * You are initializing within an existing Firebase project directory&#10;" />
      <item value="Already logged in as" />
      <item value=" Process: com.google.firebase.codelab.friendlychat, PID: 1564&#10;    java.lang.IndexOutOfBoundsException: Inconsistency detected. Invalid view holder adapter positionMessageViewHolder" />
      <item value="FATAL EXCEPTION: main" />
      <item value="Allow traffic to the Firebase Emulator Suite See: https:developer.android.comtrainingarticlessecurity-configCleartextTrafficPermitted" />
      <item value="This is the source code for the Firebase FriendlyChat codelabs. To get started open the codelab instructions:" />
      <item value="Firebase Codelab: FriendlyChat" />
      <item value="notify" />
      <item value="notifyDataSetChanged" />
      <item value="onScrollStateChanged" />
      <item value="should Sho wRequest Permission" />
      <item value="should Sho wRequestPermission" />
      <item value="should Sho wReques tPermission" />
      <item value="should ShowRequestPermission" />
      <item value="shouldShowRequestPermission" />
      <item value="shouldShowRequestPermissionRationale" />
      <item value="Begin a load with Glide that will be tied to the given Activity's lifecycle and that uses the given Activity's default options.&#10;Deprecated&#10;TODO(judds): Figure out the end state and list it here.&#10;Params:&#10;activity – The activity to use.&#10;Returns:&#10;A RequestManager for the given activity that can be used to start a load." />
      <item value="Provider" />
      <item value="resolve" />
      <item value="GRANTED" />
      <item value="Context" />
      <item value="ContextCompat" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="33" />
        <entry key="KOREAN" value="68" />
      </map>
    </option>
  </component>
</application>